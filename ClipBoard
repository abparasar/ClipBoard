To programmatically select a kernel in Jupyter Notebook using code, you can use the `jupyter_client` library, which provides access to the Jupyter kernel management interface. However, Jupyter itself does not have built-in functionality to change the kernel directly within a notebook's code. 

Instead, you can follow these approaches to change or check the kernel:

### 1. **Check the Current Kernel**

You can check the current kernel information using `jupyter_client` within a notebook:

```python
from jupyter_client import KernelManager

km = KernelManager()
kernel_info = km.kernel_info()
print(kernel_info)
```

### 2. **Change Kernel Programmatically (via API)**

Changing the kernel programmatically isn't typically done within the notebook itself because Jupyter notebooks are designed to be interactive with kernels that are already started. Changing kernels usually happens from the Jupyter interface.

### 3. **Switching Kernels in JupyterLab**

To change the kernel in JupyterLab manually:

1. **Open Your Notebook**: Go to your notebook in JupyterLab.
2. **Select the Kernel**: Click on the kernel name in the top-right corner of the notebook interface.
3. **Choose a Kernel**: Select the kernel you want to use from the dropdown list.

### 4. **Using `nbconvert` to Run Notebooks with Different Kernels**

If you need to run a notebook with a specific kernel from the command line, you can use `nbconvert`:

```bash
jupyter nbconvert --to notebook --ExecutePreprocessor.kernel_name=myenv --execute my_notebook.ipynb
```

Replace `myenv` with your kernel name and `my_notebook.ipynb` with the notebook file you want to run.

### Summary

Directly selecting a kernel programmatically from within a Jupyter notebook is not supported. Instead, use the JupyterLab interface or command-line tools to manage and run notebooks with different kernels.