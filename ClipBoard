import pandas as pd
from transformers import pipeline

# -----------------------------
# 1. Example Data
# -----------------------------
df = pd.DataFrame({
    "call": [1, 2],
    "dialogue": [
        "Hi#utterance#I want to check my balance#utterance#And reset my password",
        "Hello#utterance#Transfer money to my account"
    ]
})

# -----------------------------
# 2. Original Intent IDs
# -----------------------------
original_intents = [
    "CHECK_BALANCE",
    "TRANSFER_MONEY",
    "RESET_PASSWORD",
    "COMPLAINT",
    "GREETING",
    "CLOSE_ACCOUNT"
]

# -----------------------------
# 3. Create Mapping to Natural Language
# -----------------------------
intent_map = {orig: orig.lower().replace("_", " ") for orig in original_intents}
natural_labels = list(intent_map.values())

# -----------------------------
# 4. Zero-Shot Classifier
# -----------------------------
classifier = pipeline(
    "zero-shot-classification",
    model="facebook/bart-large-mnli",
    device=-1  # change to 0 for GPU
)

# -----------------------------
# 5. Split Dialogues into Utterances
# -----------------------------
df["utterances"] = df["dialogue"].str.split("#utterance#")

# -----------------------------
# 6. Detect Intents per Utterance
# -----------------------------
def detect_intents(text):
    result = classifier(text, natural_labels, multi_label=True)
    
    # Keep intents above threshold
    matched_natural = [
        label for label, score in zip(result["labels"], result["scores"])
        if score > 0.5
    ]
    
    # Map back to original IDs
    matched_ids = [
        orig for orig, natural in intent_map.items()
        if natural in matched_natural
    ]
    return matched_ids

df["utterance_intents"] = df["utterances"].apply(
    lambda utt_list: [detect_intents(utt.strip()) for utt in utt_list]
)

# -----------------------------
# 7. Aggregate Intents per Call
# -----------------------------
df["all_intents"] = df["utterance_intents"].apply(
    lambda intents_list: set([intent for sublist in intents_list for intent in sublist])
)

# -----------------------------
# 8. Filter Multi-Intent Calls
# -----------------------------
multi_intent_df = df[df["all_intents"].apply(len) > 1]

print("Multi-intent calls:")
print(multi_intent_df[["call", "all_intents"]])