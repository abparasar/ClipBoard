import numpy as np
import pandas as pd
from statsmodels.tsa.stattools import adfuller

# Example fraud rates: 10 score bands x 7 months (replace with your actual data)
fraud_rates = np.random.rand(10, 7) * 0.05  # Example rates between 0 and 5%

# Convert to DataFrame for clarity
months = [f'Month_{i+1}' for i in range(fraud_rates.shape[1])]
score_bands = [f'Band_{i+1}' for i in range(fraud_rates.shape[0])]
fraud_df = pd.DataFrame(fraud_rates, index=score_bands, columns=months)

# Perform ADF test for each score band
adf_results = []
for band in score_bands:
    series = fraud_df.loc[band].values
    adf_stat, p_value, lags, n_obs, crit_values, _ = adfuller(series, autolag='AIC')
    adf_results.append({
        'Score Band': band,
        'ADF Statistic': adf_stat,
        'P-Value': p_value,
        'Lags Used': lags,
        'Observations': n_obs,
        '1% Critical Value': crit_values['1%'],
        '5% Critical Value': crit_values['5%'],
        '10% Critical Value': crit_values['10%'],
        'Stationary': 'Yes' if p_value <= 0.05 else 'No'
    })

# Results in a DataFrame
adf_results_df = pd.DataFrame(adf_results)
print(adf_results_df)