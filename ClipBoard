import matplotlib.pyplot as plt
from sklearn.cluster import KMeans
import numpy as np

# Assume 'data' is your dataset with shape (21000, 600)
# For demonstration, let's use some random data
data = np.random.rand(1000, 600)  # Replace with your actual data

# Range of K values to test
K_range = range(1, 11)
inertia = []

# Calculate the within-cluster sum of squares for each K
for k in K_range:
    kmeans = KMeans(n_clusters=k, random_state=42)
    kmeans.fit(data)
    inertia.append(kmeans.inertia_)

# Plot the Elbow graph
plt.figure(figsize=(8, 4))
plt.plot(K_range, inertia, 'bo-')
plt.xlabel('Number of Clusters K')
plt.ylabel('Inertia')
plt.title('Elbow Method For Optimal K')
plt.show()